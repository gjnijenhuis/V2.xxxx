######################### PAUSE/RESUME/CANCEL #########################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel print
gcode:
    TURN_OFF_HEATERS
    SDCARD_RESET_FILE
    PARKPURGE
    CLEAR_PAUSE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:

    # Parameters
    {% set z = params.Z|default(10)|int %}                                                  ; z hop amount
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
  
    {% if printer.pause_resume.is_paused %}
        RESPOND MSG="Print is already paused"
    {% else %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}   ; set hotend temp variable for reference in resume macro
        #SET_GCODE_VARIABLE MACRO=_ERCF_ENDLESS_SPOOL_PRE_UNLOAD VARIABLE=etemp VALUE={printer['extruder'].target}   ; set hotend temp variable for reference in ERCF Endless Spool macro

        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=original_z VALUE={act_z}                       ; set actual z position to return to on resume
      
        {% if act_z < (max_z - z) %}
            {% set z_safe = z %}
        {% else %}
            {% set z_safe = max_z - act_z %}
        {% endif %}
    
        G92 E0
        G1 E-2.0 F1500.0
        G90
        SAVE_GCODE_STATE NAME=PAUSE
        BASE_PAUSE
        G91
        G1 Z{z_safe} F900
        PARKPURGE
        SAVE_GCODE_STATE NAME=PAUSEBEFOREPARK                                               ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        PARKPURGEZ
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                     ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                             ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=172800                                                     ; set timeout to 48 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print
variable_zhop: 0.2
variable_etemp: 255
variable_original_z: 250
gcode:
    {% if not printer.pause_resume.is_paused %}
        RESPOND MSG="Print is not paused. Resume ignored"
    {% else %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                      ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                                            ; wait for hotend to heat back up
        {% endif %}            
        PARKPURGE
        PURGENOZZLE L=5 R=0
        CLEANNOZZLE
        PURGEANDSWIPENOZZLE
        G92 E0
        G1 E-2.0 F1500.0

        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                                                         ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        RESTORE_GCODE_STATE NAME=PAUSEBEFOREPARK MOVE=1 MOVE_SPEED=100 

        G91                                                                                                              ; relative positioning
        G1 Z{zhop * -1} F900                                                                                             ; lower Z back down
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=100                                                             ; restore position
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                             
            M83                                                                                                          ; relative extruder positioning
            G1 E2.0 F1500.0                                                                                              ; unretract
            RESTORE_GCODE_STATE NAME=PAUSE                                                                               ; restore state just in case gcode_state has absolute extruder positioning
        {% endif %}                             

        G90
        {% if printer.ercf.clog_detection|int == 1 %}
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        {% endif %}
        BASE_RESUME
        status_printing
    {% endif %}


